---
import { translations, type Language } from "../../lib/i18n";

interface Props {
  lang: Language;
}

const { lang = "ja" } = Astro.props;
const t = translations[lang].footer;
---

<footer class="bg-gray-900 text-white py-16">
  <div class="container mx-auto px-4">
    <div class="grid md:grid-cols-4 gap-8">
      <!-- Company Info -->
      <div class="md:col-span-2">
        <div class="flex items-center space-x-3 mb-4">
          <img
            src="/images/favicon.png"
            alt="TapForge"
            class="w-10 h-10 rounded-lg"
          />
          <span class="text-xl font-bold">TapForge</span>
        </div>
        <p class="text-gray-300 mb-4">
          {t.description}
        </p>
        <p class="text-sm text-gray-400">
          {t.tagline}
        </p>
      </div>

      <!-- Quick Links -->
      <div>
        <h3 class="text-lg font-semibold mb-4 text-white">
          {t.quickLinks.title}
        </h3>
        <ul class="space-y-2">
          <li>
            <a
              href="#features"
              class="text-gray-300 hover:text-white transition-colors smooth-scroll"
              >{t.quickLinks.features}</a
            >
          </li>
          <li>
            <a
              href="#pricing"
              class="text-gray-300 hover:text-white transition-colors smooth-scroll"
              >{t.quickLinks.pricing}</a
            >
          </li>
          <li>
            <a
              href="#testimonials"
              class="text-gray-300 hover:text-white transition-colors smooth-scroll"
              >{t.quickLinks.testimonials}</a
            >
          </li>
          <li>
            <a
              href="#faq"
              class="text-gray-300 hover:text-white transition-colors smooth-scroll"
              >{t.quickLinks.faq}</a
            >
          </li>
        </ul>
      </div>

      <!-- Contact -->
      <div>
        <h3 class="text-lg font-semibold mb-4 text-white">{t.contact.title}</h3>
        <ul class="space-y-2">
          <li>
            <a
              href="https://cor-jp.com/"
              target="_blank"
              rel="noopener noreferrer"
              class="text-gray-300 hover:text-white transition-colors"
            >
              {t.contact.company}
            </a>
          </li>
          <li>
            <a
              href="#trial"
              class="text-gray-300 hover:text-white transition-colors smooth-scroll"
            >
              {t.contact.trial}
            </a>
          </li>
          <li>
            <a
              href="/privacy"
              class="text-gray-300 hover:text-white transition-colors footer-legal-link"
              id="privacy-link"
            >
              {t.legal.privacy}
            </a>
          </li>
          <li>
            <a
              href="/terms"
              class="text-gray-300 hover:text-white transition-colors footer-legal-link"
              id="terms-link"
            >
              {t.legal.terms}
            </a>
          </li>
        </ul>
      </div>
    </div>

    <!-- Bottom Section -->
    <div class="border-t border-gray-700 mt-12 pt-8">
      <div class="text-center">
        <p class="text-gray-400 text-sm">
          {t.copyright}
        </p>
      </div>
    </div>
  </div>
</footer>

<script>
  import {
    getCurrentLanguage,
    setupSmoothScroll,
    initializeOnDOMReady,
    setupLanguageChangeListeners,
    updateLinksWithLanguage,
    updateMultipleElements,
  } from "../../lib/languageUtils";
  import { translations } from "../../lib/i18n";

  // Footer initialization function
  function initializeFooter() {
    const currentLang = getCurrentLanguage();

    // Setup smooth scroll functionality
    setupSmoothScroll();

    // Update footer content and links
    updateFooterContent(currentLang);
    updateFooterLinks(currentLang);
  }

  // Initialize on DOM ready with utility function
  initializeOnDOMReady(initializeFooter);

  function updateFooterContent(lang) {
    const t = translations[lang]?.footer || translations["ja"].footer;

    // Update all footer text elements
    const updates = [
      { id: "footer-description", content: t.description },
      { id: "footer-tagline", content: t.tagline },
      { id: "footer-quicklinks-title", content: t.quickLinks.title },
      { id: "footer-contact-title", content: t.contact.title },
      { id: "footer-copyright", content: t.copyright },
    ];

    // Try to update elements if they have IDs, otherwise use selectors
    const descriptionElement = document.querySelector("footer .text-gray-300");
    if (descriptionElement) {
      descriptionElement.textContent = t.description;
    }

    const taglineElement = document.querySelector(
      "footer .text-sm.text-gray-400",
    );
    if (taglineElement) {
      taglineElement.textContent = t.tagline;
    }

    // Update quick links
    const quickLinksTitle = document.querySelector("footer h3");
    if (quickLinksTitle) {
      quickLinksTitle.textContent = t.quickLinks.title;
    }

    const quickLinksItems = document.querySelectorAll("footer .space-y-2 a");
    if (quickLinksItems.length >= 4) {
      quickLinksItems[0].textContent = t.quickLinks.features;
      quickLinksItems[1].textContent = t.quickLinks.pricing;
      quickLinksItems[2].textContent = t.quickLinks.testimonials;
      quickLinksItems[3].textContent = t.quickLinks.faq;
    }

    // Update contact section
    const contactTitle = document.querySelectorAll("footer h3")[1];
    if (contactTitle) {
      contactTitle.textContent = t.contact.title;
    }

    const contactItems = document
      .querySelectorAll("footer .space-y-2")[1]
      ?.querySelectorAll("a");
    if (contactItems && contactItems.length >= 4) {
      contactItems[0].textContent = t.contact.company;
      contactItems[1].textContent = t.contact.trial;
      contactItems[2].textContent = t.legal.privacy;
      contactItems[3].textContent = t.legal.terms;
    }

    // Update copyright
    const copyrightElement = document.querySelector(
      "footer .text-gray-400.text-sm",
    );
    if (copyrightElement) {
      copyrightElement.textContent = t.copyright;
    }
  }

  function updateFooterLinks(lang) {
    // Update legal links with language parameter
    updateLinksWithLanguage(lang, ["#privacy-link", "#terms-link"]);
  }

  // Setup language change listeners
  setupLanguageChangeListeners((newLang) => {
    updateFooterContent(newLang);
    updateFooterLinks(newLang);
  });
</script>
